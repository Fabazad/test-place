{"version":3,"file":"addActivationEvents.js","sources":["cli/addActivationEvents.ts"],"sourceRoot":"/","sourcesContent":["import { getTestDAO } from \"@/entities/Test/dao/test.dao.index.js\";\nimport { TestStatus } from \"@/entities/Test/test.constants.js\";\nimport { getUserDAO } from \"@/entities/User/dao/user.dao.index.js\";\nimport { ActivationEventType } from \"@/entities/User/user.entity.js\";\nimport { Role } from \"@/utils/constants.js\";\nimport { getDatabaseConnection } from \"databaseConnection/index.js\";\n\nconst filterAndDistinct = <T>(arr1: Array<T>, arr2: Array<T>): Array<T> => {\n  return [...new Set(arr1.filter((a) => !arr2.includes(a)))];\n};\n\nconst addActivationEvents = async () => {\n  const databaseConnection = getDatabaseConnection();\n  await databaseConnection.connect();\n\n  const userDAO = getUserDAO();\n  const testDAO = getTestDAO();\n\n  const testerIds = await userDAO.getUserIds({ role: Role.TESTER });\n\n  console.log({ testerIds });\n\n  for (const testerId of testerIds) {\n    console.log({ testerId });\n    const user = await userDAO.getUser({ userId: testerId });\n    if (!user) continue;\n\n    if (!user.activationEvents) user.activationEvents = [];\n\n    const currentActivationEvents = user.activationEvents.map((event) => event.eventType);\n    const activationEventsToAdd: Array<ActivationEventType> = [];\n\n    if (user.emailValidation)\n      activationEventsToAdd.push(ActivationEventType.EMAIL_VALIDATION);\n\n    const moneyReceivedTestsCount = await testDAO.countTestWithStatues({\n      userId: testerId,\n      statuses: [TestStatus.MONEY_RECEIVED],\n    });\n\n    if (moneyReceivedTestsCount > 0) {\n      activationEventsToAdd.push(\n        ...[\n          ActivationEventType.FIRST_TEST_REQUEST,\n          ActivationEventType.FIRST_PRODUCT_ORDERED,\n          ActivationEventType.FIRST_PRODUCT_RECEIVED,\n          ActivationEventType.FIRST_PRODUCT_REVIEWED,\n          ActivationEventType.FIRST_MONEY_RECEIVED,\n        ]\n      );\n      await userDAO.addActivationEvents({\n        userId: testerId,\n        eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n      });\n      continue;\n    }\n\n    const productReviewedTestsCount = await testDAO.countTestWithStatues({\n      userId: testerId,\n      statuses: [\n        TestStatus.PRODUCT_REVIEWED,\n        TestStatus.REVIEW_VALIDATED,\n        TestStatus.REVIEW_REFUSED,\n      ],\n    });\n\n    if (productReviewedTestsCount > 0) {\n      activationEventsToAdd.push(\n        ...[\n          ActivationEventType.FIRST_TEST_REQUEST,\n          ActivationEventType.FIRST_PRODUCT_ORDERED,\n          ActivationEventType.FIRST_PRODUCT_RECEIVED,\n          ActivationEventType.FIRST_PRODUCT_REVIEWED,\n        ]\n      );\n      await userDAO.addActivationEvents({\n        userId: testerId,\n        eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n      });\n      continue;\n    }\n\n    const productReceivedTestsCount = await testDAO.countTestWithStatues({\n      userId: testerId,\n      statuses: [TestStatus.PRODUCT_RECEIVED],\n    });\n\n    if (productReceivedTestsCount > 0) {\n      activationEventsToAdd.push(\n        ...[\n          ActivationEventType.FIRST_TEST_REQUEST,\n          ActivationEventType.FIRST_PRODUCT_ORDERED,\n          ActivationEventType.FIRST_PRODUCT_RECEIVED,\n        ]\n      );\n      await userDAO.addActivationEvents({\n        userId: testerId,\n        eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n      });\n      continue;\n    }\n\n    const productOrderedTestsCount = await testDAO.countTestWithStatues({\n      userId: testerId,\n      statuses: [TestStatus.PRODUCT_ORDERED],\n    });\n\n    if (productOrderedTestsCount > 0) {\n      activationEventsToAdd.push(\n        ...[\n          ActivationEventType.FIRST_TEST_REQUEST,\n          ActivationEventType.FIRST_PRODUCT_ORDERED,\n        ]\n      );\n      await userDAO.addActivationEvents({\n        userId: testerId,\n        eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n      });\n      continue;\n    }\n\n    const requestAcceptedTestsCount = await testDAO.countTestWithStatues({\n      userId: testerId,\n      statuses: [\n        TestStatus.REQUEST_ACCEPTED,\n        TestStatus.REQUEST_DECLINED,\n        TestStatus.REQUESTED,\n        TestStatus.TEST_CANCELLED,\n      ],\n    });\n\n    if (requestAcceptedTestsCount > 0) {\n      activationEventsToAdd.push(ActivationEventType.FIRST_TEST_REQUEST);\n      await userDAO.addActivationEvents({\n        userId: testerId,\n        eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n      });\n      continue;\n    }\n\n    await userDAO.addActivationEvents({\n      userId: testerId,\n      eventTypes: filterAndDistinct(activationEventsToAdd, currentActivationEvents),\n    });\n  }\n\n  await databaseConnection.disconnect();\n  process.exit(0);\n};\n\naddActivationEvents();\n"],"names":[],"mappings":"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","debug_id":"30ba6b01-6ff6-5a68-88e8-d9aca23d15a9"}