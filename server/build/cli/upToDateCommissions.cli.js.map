{"version":3,"file":"upToDateCommissions.cli.js","sources":["cli/upToDateCommissions.cli.ts"],"sourceRoot":"/","sourcesContent":["import { getAffiliationRecordDAO } from \"@/entities/AffiliationRecord/dao/affiliationRecord.dao.index.js\";\nimport { getTestDAO } from \"@/entities/Test/dao/test.dao.index.js\";\nimport { TestStatus } from \"@/entities/Test/test.constants.js\";\nimport { getUserDAO } from \"@/entities/User/dao/user.dao.index.js\";\nimport { getDatabaseConnection } from \"databaseConnection/index.js\";\n\nconst upToDateCommissions = async () => {\n  const affiliationRecordDAO = getAffiliationRecordDAO();\n  const userDAO = getUserDAO();\n  const testDAO = getTestDAO();\n  const databaseConnection = getDatabaseConnection();\n\n  await databaseConnection.connect();\n\n  const { affiliated } = await userDAO.getUserAffiliated({\n    userId: \"66f9a5512ccc4990d7d8a570\",\n    limit: 50,\n    page: 1,\n  });\n\n  let totalCommissions = 0;\n\n  for (const affiliate of affiliated) {\n    const { userId, rateInPercent } = affiliate;\n    const userTests = await testDAO.findManyByUser({\n      userId,\n      status: [\n        TestStatus.MONEY_SENT,\n        TestStatus.MONEY_RECEIVED,\n        TestStatus.REVIEW_VALIDATED,\n        TestStatus.PRODUCT_REVIEWED,\n        TestStatus.PRODUCT_RECEIVED,\n        TestStatus.PRODUCT_ORDERED,\n      ],\n    });\n    const userCommissions = userTests.reduce((acc, curr) => {\n      const { product } = curr;\n      const { price } = product;\n      return acc + (price * rateInPercent) / 100;\n    }, 0);\n\n    console.log({ userId, userCommissions });\n\n    totalCommissions += userCommissions;\n  }\n\n  console.log({ totalCommissions });\n\n  await databaseConnection.disconnect();\n  process.exit(0);\n};\n\nupToDateCommissions();\n"],"names":[],"mappings":";;AAAA,OAAO,EAAE,uBAAuB,EAAE,MAAM,iEAAiE,CAAC;AAC1G,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAC;AAC/D,OAAO,EAAE,UAAU,EAAE,MAAM,uCAAuC,CAAC;AACnE,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAC;AAEpE,MAAM,mBAAmB,GAAG,KAAK,IAAI,EAAE;IACrC,MAAM,oBAAoB,GAAG,uBAAuB,EAAE,CAAC;IACvD,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC;IAC7B,MAAM,OAAO,GAAG,UAAU,EAAE,CAAC;IAC7B,MAAM,kBAAkB,GAAG,qBAAqB,EAAE,CAAC;IAEnD,MAAM,kBAAkB,CAAC,OAAO,EAAE,CAAC;IAEnC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,OAAO,CAAC,iBAAiB,CAAC;QACrD,MAAM,EAAE,0BAA0B;QAClC,KAAK,EAAE,EAAE;QACT,IAAI,EAAE,CAAC;KACR,CAAC,CAAC;IAEH,IAAI,gBAAgB,GAAG,CAAC,CAAC;IAEzB,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;QACnC,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,SAAS,CAAC;QAC5C,MAAM,SAAS,GAAG,MAAM,OAAO,CAAC,cAAc,CAAC;YAC7C,MAAM;YACN,MAAM,EAAE;gBACN,UAAU,CAAC,UAAU;gBACrB,UAAU,CAAC,cAAc;gBACzB,UAAU,CAAC,gBAAgB;gBAC3B,UAAU,CAAC,gBAAgB;gBAC3B,UAAU,CAAC,gBAAgB;gBAC3B,UAAU,CAAC,eAAe;aAC3B;SACF,CAAC,CAAC;QACH,MAAM,eAAe,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YACrD,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;YACzB,MAAM,EAAE,KAAK,EAAE,GAAG,OAAO,CAAC;YAC1B,OAAO,GAAG,GAAG,CAAC,KAAK,GAAG,aAAa,CAAC,GAAG,GAAG,CAAC;QAC7C,CAAC,EAAE,CAAC,CAAC,CAAC;QAEN,OAAO,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,eAAe,EAAE,CAAC,CAAC;QAEzC,gBAAgB,IAAI,eAAe,CAAC;IACtC,CAAC;IAED,OAAO,CAAC,GAAG,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC;IAElC,MAAM,kBAAkB,CAAC,UAAU,EAAE,CAAC;IACtC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,mBAAmB,EAAE,CAAC","debug_id":"464f7483-db42-520c-966a-9d69980da812"}