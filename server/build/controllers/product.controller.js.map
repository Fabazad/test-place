{"version":3,"file":"product.controller.js","sources":["controllers/product.controller.ts"],"sourceRoot":"/","sourcesContent":["import { configs } from \"@/configs.js\";\nimport { getProductDAO } from \"@/entities/Product/dao/product.dao.index.js\";\nimport {\n  isProductCategory,\n  ProductCategory,\n  ProductSearchData,\n  ProductUpdateData,\n} from \"@/entities/Product/product.constants.js\";\nimport {\n  PopulatedProduct,\n  Product,\n  PRODUCT_CATEGORIES,\n  ProductData,\n} from \"@/entities/Product/product.entity.js\";\nimport { getUserDAO } from \"@/entities/User/dao/user.dao.index.js\";\nimport { getEmailClient } from \"@/libs/EmailClient/index.js\";\nimport { getEventProducer } from \"@/libs/EventProducer/index.js\";\nimport { getMonitoringClient } from \"@/libs/MonitoringClient/index.js\";\nimport { getScrapper } from \"@/libs/Scrapper/index.js\";\nimport { Role } from \"@/utils/constants.js\";\nimport { CustomResponse } from \"@/utils/CustomResponse.js\";\nimport dayjs from \"dayjs\";\n\nexport class ProductController {\n  static async scrapFromAsin(params: { asin: string }): Promise<\n    CustomResponse<\n      {\n        title?: string;\n        price: number;\n        description?: string;\n        isPrime: boolean;\n        category?: ProductCategory;\n        seller?: {\n          name: string;\n          url: string;\n        };\n        imageUrls: Array<string>;\n      },\n      \"already_product_with_asin\" | \"product_not_found\" | \"unknown_error\"\n    >\n  > {\n    const { asin } = params;\n\n    const productDAO = getProductDAO();\n    const scrapper = getScrapper();\n\n    const product = await productDAO.getProductByAsin({ asin });\n\n    if (product)\n      return {\n        success: false,\n        errorCode: \"already_product_with_asin\",\n        errorMessage: product._id,\n      };\n\n    const scrappedData = await scrapper.getAmazonProductDetails({ asin });\n\n    if (!scrappedData.success) return scrappedData;\n\n    const category = scrappedData.data.category;\n\n    if (category) {\n      if (isProductCategory(category)) {\n        return { success: true, data: { ...scrappedData.data, category } };\n      }\n    }\n    const { category: _, ...dataWithoutCategory } = scrappedData.data;\n\n    return { success: true, data: dataWithoutCategory };\n  }\n\n  static async create(params: {\n    productData: Omit<ProductData, \"seller\" | \"remainingTestsCount\">;\n    userId: string;\n  }): Promise<CustomResponse<Product, \"duplicate_asin\">> {\n    const { productData, userId } = params;\n\n    const productDAO = getProductDAO();\n    const eventProducer = getEventProducer();\n    const monitoringClient = getMonitoringClient();\n\n    const creationRes = await productDAO.create({\n      productData: {\n        ...productData,\n        seller: userId,\n        publishDate: new Date(),\n        publishExpirationDate: dayjs()\n          .add(configs.PUBLICATION_TIME_IN_DAYS, \"d\")\n          .toDate(),\n        remainingTestsCount: productData.maxDemands,\n      },\n    });\n    if (!creationRes.success) return creationRes;\n\n    const newProduct = creationRes.data;\n\n    const res = await eventProducer.sendProductPublished(newProduct);\n    if (!res.success)\n      await monitoringClient.sendEvent({\n        eventName: \"send_product_published_error\",\n        data: {\n          productId: newProduct._id,\n          error: `[${res.errorCode}] ${res.errorMessage}`,\n        },\n        level: \"error\",\n      });\n\n    return { success: true, data: creationRes.data };\n  }\n\n  static async findPageResults(params: {\n    searchData: ProductSearchData;\n  }): Promise<CustomResponse<{ hits: Array<PopulatedProduct>; totalCount: number }>> {\n    const { searchData } = params;\n    const productDAO = getProductDAO();\n\n    const queryRes = await productDAO.findPageResults({ searchData });\n\n    return { success: true, data: queryRes };\n  }\n\n  static async getCategories(): Promise<\n    CustomResponse<Array<ProductCategory>, \"missing_categories\">\n  > {\n    const categories = PRODUCT_CATEGORIES;\n    if (categories && categories.length > 0) {\n      return { success: true, data: Array.from(categories) };\n    }\n    return { success: false, errorCode: \"missing_categories\" };\n  }\n\n  static async getOne(params: {\n    productId: string;\n  }): Promise<CustomResponse<PopulatedProduct, \"not_found\">> {\n    const { productId } = params;\n    const productDAO = getProductDAO();\n\n    const product = await productDAO.getPopulatedProductById({ id: productId });\n    if (!product) return { success: false, errorCode: \"not_found\" };\n\n    return { success: true, data: product };\n  }\n\n  static async update(params: {\n    productId: string;\n    published?: boolean;\n    fields?: ProductUpdateData;\n    user: {\n      userId: string;\n      roles: Array<Role>;\n    };\n  }): Promise<\n    CustomResponse<Product, \"not_found\" | \"not_allowed\" | \"not_found_when_updating\">\n  > {\n    const {\n      productId,\n      published,\n      fields,\n      user: { userId, roles },\n    } = params;\n    const productDAO = getProductDAO();\n\n    const product = await productDAO.getProductById({ id: productId });\n    if (!product) return { success: false, errorCode: \"not_found\" };\n\n    if (product.seller !== userId && !roles.includes(Role.ADMIN)) {\n      return { success: false, errorCode: \"not_allowed\" };\n    }\n\n    const publishExpirationDate =\n      published === true || (published === undefined && product.publishExpirationDate)\n        ? dayjs().add(configs.PUBLICATION_TIME_IN_DAYS, \"d\").toDate()\n        : null;\n\n    const newProduct = await productDAO.updateProduct({\n      id: productId,\n      // @ts-ignore\n      updates: {\n        publishExpirationDate,\n        ...(fields ? fields : {}),\n      },\n    });\n\n    if (!newProduct) return { success: false, errorCode: \"not_found_when_updating\" };\n\n    return { success: true, data: newProduct };\n  }\n\n  static async delete(params: {\n    productId: string;\n    userId: string;\n  }): Promise<\n    CustomResponse<Product, \"not_found\" | \"not_allowed\" | \"not_found_when_deleting\">\n  > {\n    const { productId, userId } = params;\n\n    const productDAO = getProductDAO();\n\n    const product = await productDAO.getProductById({ id: productId });\n    if (!product) return { success: false, errorCode: \"not_found\" };\n\n    if (product.seller !== userId) {\n      return { success: false, errorCode: \"not_allowed\" };\n    }\n\n    const oldProduct = await productDAO.findAndDeleteProduct({ id: productId });\n\n    if (oldProduct === null)\n      return { success: false, errorCode: \"not_found_when_deleting\" };\n\n    return { success: true, data: oldProduct };\n  }\n\n  static async emailLastPublishedProducts(params: {\n    frontendUrl: string;\n    lastPublishedProductsPeriodInDays: number;\n  }) {\n    const { frontendUrl, lastPublishedProductsPeriodInDays } = params;\n    const productDAO = getProductDAO();\n    const emailClient = getEmailClient();\n    const userDAO = getUserDAO();\n\n    const fromDate = dayjs().subtract(lastPublishedProductsPeriodInDays, \"d\").toDate();\n\n    const [products, testers] = await Promise.all([\n      productDAO.findLastPublishedProducts({ fromDate }),\n      userDAO.getTestersContacts(),\n    ]);\n\n    console.log({ products, testers });\n\n    const emailsRes = await emailClient.sendLastPublishedProductsMail({\n      frontendUrl,\n      products,\n      to: testers,\n    });\n\n    return { success: true, data: emailsRes.data };\n  }\n}\n"],"names":[],"mappings":"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","debug_id":"31ac3f3b-faf1-5557-881f-f64b4893364b"}