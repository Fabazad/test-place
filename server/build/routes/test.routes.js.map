{"version":3,"file":"test.routes.js","sources":["routes/test.routes.ts"],"sourceRoot":"/","sourcesContent":["import { TestController } from \"@/controllers/test.controller.js\";\nimport { TestStatus } from \"@/entities/Test/test.constants.js\";\nimport { withAuth } from \"@/middlewares/withAuth.js\";\nimport { asyncHandler } from \"@/utils/asyncHandler.js\";\nimport { Role, testStatusUpdateParamsSchema } from \"@/utils/constants.js\";\nimport { handleResponseForRoute } from \"@/utils/CustomResponse.js\";\nimport {\n  BadRequestError,\n  NotFoundRequestError,\n  ServerRequestError,\n  UnauthorizedRequestError,\n} from \"@/utils/exceptions/index.js\";\nimport { booleanSchema, numberSchema } from \"@/utils/zod.utils.js\";\nimport { zodValidationForRoute } from \"@/utils/zodValidationForRoute.js\";\nimport { Router } from \"express\";\nimport z from \"zod\";\n\nconst router = Router();\n\nrouter.post(\n  \"/create\",\n  withAuth(Role.TESTER),\n  asyncHandler(async (request, reply) => {\n    const { productId, status, testerMessage } = zodValidationForRoute(\n      request.body,\n      z.object({\n        productId: z.string(),\n        status: z.nativeEnum(TestStatus),\n        testerMessage: z.string().optional(),\n      })\n    );\n    const frontendUrl = zodValidationForRoute(request.headers.origin, z.string());\n\n    const userId = request.decoded!.userId;\n    const res = await TestController.create({\n      userId,\n      productId,\n      status,\n      testerMessage,\n      frontendUrl,\n    });\n    reply.send(\n      handleResponseForRoute(res, {\n        dont_have_automatic_acceptance: new BadRequestError(\n          \"dont_have_automatic_acceptance\"\n        ),\n        seller_not_found: new NotFoundRequestError(\"seller_not_found\"),\n        not_enough_remaining_requests: new BadRequestError(\n          \"not_enough_remaining_requests\"\n        ),\n        user_is_seller: new BadRequestError(\"user_is_seller\"),\n        product_not_found: new NotFoundRequestError(\"product_not_found\"),\n        user_to_notify_not_found: new ServerRequestError(\"user_to_notify_not_found\"),\n        missing_tester_message: new BadRequestError(\"missing_tester_message\"),\n        already_testing: new BadRequestError(\"already_testing\"),\n        previous_request_declined: new BadRequestError(\"previous_request_declined\"),\n      })\n    );\n  })\n);\n\nrouter.get(\n  \"/statuses\",\n  asyncHandler(async (request, reply) => {\n    const res = await TestController.getStatuses();\n    reply.send(res);\n  })\n);\n\nrouter.get(\n  \"/find\",\n  withAuth(),\n  asyncHandler(async (request, reply) => {\n    const userId = request.decoded!.userId;\n    const { searchData } = zodValidationForRoute(\n      request.query,\n      z.object({\n        searchData: z.object({\n          itemsPerPage: numberSchema({ max: 100, min: 1 }),\n          page: numberSchema({ min: 1 }),\n          statuses: z.array(z.nativeEnum(TestStatus)).optional(),\n          asSeller: booleanSchema().optional(),\n          asTester: booleanSchema().optional(),\n        }),\n      })\n    );\n    const res = await TestController.find({ userId, searchData });\n\n    reply.send(handleResponseForRoute(res));\n  })\n);\n\nrouter.post(\n  \"/updateStatus\",\n  asyncHandler(async (request, reply) => {\n    const userId = request.decoded!.userId;\n    const { testId, update } = zodValidationForRoute(\n      request.body,\n      z.object({\n        testId: z.string(),\n        update: testStatusUpdateParamsSchema,\n      })\n    );\n\n    const frontendUrl = zodValidationForRoute(request.headers.origin, z.string());\n\n    const res = await TestController.updateStatus({\n      userId,\n      testId,\n      update,\n      frontendUrl,\n    });\n\n    reply.send(\n      handleResponseForRoute(res, {\n        test_not_found: new NotFoundRequestError(\"test_not_found\"),\n        test_not_found_when_updating: new NotFoundRequestError(\n          \"test_not_found_when_updating\"\n        ),\n        only_allowed_for_seller: new UnauthorizedRequestError(\"only_allowed_for_seller\"),\n        only_allowed_for_tester: new UnauthorizedRequestError(\"only_allowed_for_tester\"),\n        wrong_previous_status: new BadRequestError(\"wrong_previous_status\"),\n        user_to_notify_not_found: new ServerRequestError(\"user_to_notify_not_found\"),\n      })\n    );\n  })\n);\n\nrouter.get(\n  \"/:testId\",\n  withAuth(),\n  asyncHandler(async (request, reply) => {\n    const { userId, roles } = request.decoded!;\n    const { testId } = zodValidationForRoute(\n      request.params,\n      z.object({ testId: z.string() })\n    );\n\n    const res = await TestController.getTest({ testId, userId, roles });\n\n    reply.send(\n      handleResponseForRoute(res, {\n        not_found: new NotFoundRequestError(\"not_found\"),\n        not_allowed: new UnauthorizedRequestError(\"not_allowed\"),\n      })\n    );\n  })\n);\n\nexport default router;\n"],"names":[],"mappings":"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","debug_id":"c9519c3f-ef30-5038-9809-f7639f825002"}