{"version":3,"file":"getZodUnionOptions.js","sources":["utils/generateMongooseSchemaFromZod/getZodUnionOptions.ts"],"sourceRoot":"/","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { ZodDiscriminatedUnion, ZodFirstPartyTypeKind, ZodObject, ZodTypeAny, ZodUnion } from \"zod\";\nimport { isZodObject } from \"./typeGuards.js\";\n\nexport const NOT_OBJECT_IN_UNION_ERROR = \"ZodUnion/.or options are not all ZodObjects\";\nexport const getZodUnionOptions = (zodUnion: ZodUnion<[ZodTypeAny]> | ZodDiscriminatedUnion<any, any>): Array<ZodObject<any>> | \"mixed\" => {\n    if (zodUnion._def.typeName === ZodFirstPartyTypeKind.ZodDiscriminatedUnion) {\n        return zodUnion._def.options;\n    }\n    if (zodUnion._def.options.every(isZodObject)) {\n        return zodUnion._def.options;\n    }\n    return \"mixed\";\n};\n"],"names":[],"mappings":"AAAA,yCAAyC;;;AACzC,OAAO,EAAyB,qBAAqB,EAAmC,MAAM,KAAK,CAAC;AACpG,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAE9C,MAAM,CAAC,MAAM,yBAAyB,GAAG,6CAA6C,CAAC;AACvF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,QAAkE,EAAmC,EAAE;IACtI,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,qBAAqB,EAAE,CAAC;QACzE,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IACjC,CAAC;IACD,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC;QAC3C,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;IACjC,CAAC;IACD,OAAO,OAAO,CAAC;AACnB,CAAC,CAAC","debug_id":"a4d040a6-5db9-5266-8c87-68502808b19f"}