{"version":3,"file":"index.js","sources":["utils/generateMongooseSchemaFromZod/index.ts"],"sourceRoot":"/","sourcesContent":["import defaultsDeep from \"lodash/defaultsDeep.js\";\nimport { SchemaDefinition } from \"mongoose\";\nimport { ZodDiscriminatedUnion, ZodIntersection, ZodObject, ZodUnion } from \"zod\";\nimport { generateMongooseSchemaFromZodRec } from \"./generateMongooseSchemaFromZodRec.js\";\n\nexport const ID_AT_ROOT_ERROR = \"Id at root is not supported\";\n\nexport const generateMongooseSchemaFromZod = (\n    properties: ZodObject<any> | ZodUnion<any> | ZodDiscriminatedUnion<string, any> | ZodIntersection<any, any>,\n    overrideSchema?: SchemaDefinition,\n    removeIdsFromSchema?: boolean,\n    schemaOptions: { typedKey: string } = { typedKey: \"type\" },\n): SchemaDefinition => {\n    const generated = generateMongooseSchemaFromZodRec(properties, undefined, removeIdsFromSchema, schemaOptions);\n    const result = overrideSchema ? defaultsDeep(overrideSchema, generated) : generated;\n\n    if (Object.keys(result).includes(\"_id\")) throw new Error(ID_AT_ROOT_ERROR);\n\n    return result;\n};\n"],"names":[],"mappings":";;AAAA,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAGlD,OAAO,EAAE,gCAAgC,EAAE,MAAM,uCAAuC,CAAC;AAEzF,MAAM,CAAC,MAAM,gBAAgB,GAAG,6BAA6B,CAAC;AAE9D,MAAM,CAAC,MAAM,6BAA6B,GAAG,CACzC,UAA2G,EAC3G,cAAiC,EACjC,mBAA6B,EAC7B,gBAAsC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAC1C,EAAE;IAClB,MAAM,SAAS,GAAG,gCAAgC,CAAC,UAAU,EAAE,SAAS,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAAC;IAC9G,MAAM,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAEpF,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAE3E,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC","debug_id":"20e30489-5a2d-54ea-bf8c-22517ae9ceb3"}