{"version":3,"file":"getZodObjectKeys.js","sources":["utils/generateMongooseSchemaFromZod/getZodObjectKeys.ts"],"sourceRoot":"/","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport { ZodDiscriminatedUnion, ZodEnum, ZodObject, ZodUnion } from \"zod\";\nimport { getZodUnionOptions } from \"./getZodUnionOptions.js\";\nimport { isZodObject } from \"./typeGuards.js\";\n\nexport const getZodObjectKeys = (properties: ZodObject<any> | ZodUnion<[ZodObject<any>]> | ZodDiscriminatedUnion<any, any>): Array<string> => {\n    if (isZodObject(properties)) {\n        const props: ZodEnum<[string]> = properties.keyof();\n        return props.options;\n    }\n    const options = getZodUnionOptions(properties);\n    if (options === \"mixed\") throw new Error(\"ZodUnion/.or options are not all ZodObjects\");\n    return options.reduce<Array<string>>((acc, curr) => {\n        return [...acc, ...getZodObjectKeys(curr)];\n    }, []);\n};\n"],"names":[],"mappings":";;AAEA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EAAE,WAAW,EAAE,MAAM,iBAAiB,CAAC;AAE9C,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,UAAyF,EAAiB,EAAE;IACzI,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;QAC1B,MAAM,KAAK,GAAsB,UAAU,CAAC,KAAK,EAAE,CAAC;QACpD,OAAO,KAAK,CAAC,OAAO,CAAC;IACzB,CAAC;IACD,MAAM,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;IAC/C,IAAI,OAAO,KAAK,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;IACxF,OAAO,OAAO,CAAC,MAAM,CAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QAC/C,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC/C,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC,CAAC","debug_id":"a6417fa9-ae0f-5ef2-91cf-2c3683f36291"}