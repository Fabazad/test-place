{"version":3,"file":"generateMongooseSchemaFromZodRec.js","sources":["utils/generateMongooseSchemaFromZod/generateMongooseSchemaFromZodRec.ts"],"sourceRoot":"/","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-underscore-dangle */\nimport defaultsDeep from \"lodash/defaultsDeep.js\";\nimport {\n  Schema as MongooseSchema,\n  SchemaDefinition,\n  SchemaDefinitionProperty,\n  Types,\n} from \"mongoose\";\nimport {\n  ZodDiscriminatedUnion,\n  ZodDiscriminatedUnionDef,\n  ZodFirstPartySchemaTypes,\n  ZodFirstPartyTypeKind,\n  ZodIntersection,\n  ZodObject,\n  ZodUnion,\n} from \"zod\";\nimport { getNativEnumData } from \"./getNativEnumData.js\";\nimport { getZodObjectKeys } from \"./getZodObjectKeys.js\";\nimport { getZodUnionOptions } from \"./getZodUnionOptions.js\";\nimport {\n  isZodArray,\n  isZodDiscriminatedUnion,\n  isZodIntersection,\n  isZodObject,\n  isZodUnion,\n} from \"./typeGuards.js\";\n\nexport const UNION_WITH_NOT_OBJECT_AT_ROOT_ERROR =\n  \"Union with not object type at root is not supported\";\n\nconst generateMongoosePropertyFromZodRec = (\n  properties: ZodFirstPartySchemaTypes,\n  required = true,\n  defaultValue: string | undefined = undefined,\n  schemaOptions: { typedKey: string } = { typedKey: \"type\" }\n): SchemaDefinitionProperty => {\n  const propertiesDef = properties._def;\n  const propertiesZodType = propertiesDef.typeName;\n  const requiredField = required ? {} : { required: false };\n  const { typedKey } = schemaOptions;\n\n  if (\n    properties._def.typeName === ZodFirstPartyTypeKind.ZodOptional ||\n    properties._def.typeName === ZodFirstPartyTypeKind.ZodNullable\n  ) {\n    const { innerType } = properties._def;\n    return generateMongoosePropertyFromZodRec(innerType, false, undefined, schemaOptions);\n  }\n\n  if (properties._def.typeName === ZodFirstPartyTypeKind.ZodDefault) {\n    const { innerType } = properties._def;\n    return generateMongoosePropertyFromZodRec(\n      innerType,\n      required,\n      properties._def.defaultValue(),\n      schemaOptions\n    );\n  }\n\n  if (isZodObject(properties)) {\n    const _id = getZodObjectKeys(properties).includes(\"_id\");\n    return {\n      ...requiredField,\n      [typedKey]: generateMongooseSchemaFromZodRec(\n        properties,\n        undefined,\n        undefined,\n        schemaOptions\n      ),\n      ...(defaultValue && { default: defaultValue }),\n      ...(_id ? {} : { _id: false }),\n    };\n  }\n\n  if (isZodArray(properties)) {\n    if (\n      isZodObject(properties.element) ||\n      isZodUnion(properties.element) ||\n      isZodDiscriminatedUnion(properties.element)\n    ) {\n      const generated = generateMongooseSchemaFromZodRec(\n        properties.element,\n        undefined,\n        undefined,\n        schemaOptions\n      );\n      const hasId = \"_id\" in generated;\n\n      if (hasId) delete generated._id;\n\n      return {\n        ...requiredField,\n        [typedKey]: [generated],\n        ...(defaultValue && { default: defaultValue }),\n        ...(hasId ? {} : { _id: false }),\n      };\n    }\n\n    return {\n      ...requiredField,\n      [typedKey]: [\n        generateMongoosePropertyFromZodRec(\n          properties.element,\n          undefined,\n          undefined,\n          schemaOptions\n        ),\n      ],\n      ...(defaultValue && { default: defaultValue }),\n    };\n  }\n\n  if (properties._def.typeName === ZodFirstPartyTypeKind.ZodString) {\n    if (properties._def.description) {\n      return {\n        ...requiredField,\n        [typedKey]: Types.ObjectId,\n        ref: properties._def.description,\n      };\n    }\n    const maxCheck = properties._def.checks.find(\n      (check): check is { kind: \"max\"; value: number } => check.kind === \"max\"\n    );\n    const minCheck = properties._def.checks.find(\n      (check): check is { kind: \"min\"; value: number } => check.kind === \"min\"\n    );\n\n    const min = minCheck?.value;\n    const max = maxCheck?.value;\n\n    return {\n      ...requiredField,\n      [typedKey]: String,\n      ...(defaultValue && { default: defaultValue }),\n      ...(min !== undefined && { min }),\n      ...(max && { max }),\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodNativeEnum) {\n    const { type, elements } = getNativEnumData(propertiesDef);\n    return {\n      ...requiredField,\n      [typedKey]: type,\n      ...(defaultValue && { default: defaultValue }),\n      enum: elements,\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodDate) {\n    return {\n      ...requiredField,\n      [typedKey]: Date,\n      ...(defaultValue && { default: defaultValue }),\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodBoolean) {\n    return {\n      ...requiredField,\n      [typedKey]: Boolean,\n      ...(defaultValue && { default: defaultValue }),\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodNumber) {\n    const maxCheck = propertiesDef.checks.find(\n      (check): check is { kind: \"max\"; value: number; inclusive: boolean } =>\n        check.kind === \"max\"\n    );\n    const minCheck = propertiesDef.checks.find(\n      (check): check is { kind: \"min\"; value: number; inclusive: boolean } =>\n        check.kind === \"min\"\n    );\n    const max = maxCheck\n      ? maxCheck.inclusive\n        ? maxCheck.value\n        : maxCheck.value - 1\n      : undefined;\n    const min = minCheck\n      ? minCheck.inclusive\n        ? minCheck.value\n        : minCheck.value - 1\n      : undefined;\n\n    return {\n      ...requiredField,\n      [typedKey]: Number,\n      ...(defaultValue !== undefined && { default: defaultValue }),\n      ...(max && { max }),\n      ...(min !== undefined && { min }),\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodEnum) {\n    const { values } = propertiesDef;\n    return {\n      ...requiredField,\n      [typedKey]: String,\n      ...(defaultValue && { default: defaultValue }),\n      enum: values,\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodLiteral) {\n    return {\n      ...requiredField,\n      [typedKey]: String,\n      ...(defaultValue && { default: defaultValue }),\n    };\n  }\n\n  if (propertiesZodType === ZodFirstPartyTypeKind.ZodRecord) {\n    const keyType = propertiesDef.keyType._def;\n    if (keyType.typeName === ZodFirstPartyTypeKind.ZodNativeEnum) {\n      const { type, elements } = getNativEnumData(keyType);\n      if (type === String) {\n        return {\n          ...requiredField,\n          [typedKey]: elements.reduce<Record<string, SchemaDefinitionProperty>>(\n            (acc, curr) => ({ ...acc, [curr]: { [typedKey]: String, ...requiredField } }),\n            {}\n          ),\n        };\n      }\n    }\n    if (keyType.typeName === ZodFirstPartyTypeKind.ZodEnum) {\n      const values = keyType.values as Array<string>;\n      return {\n        ...requiredField,\n        [typedKey]: values.reduce<Record<string, SchemaDefinitionProperty>>(\n          (acc, curr) => ({ ...acc, [curr]: { [typedKey]: String, ...requiredField } }),\n          {}\n        ),\n      };\n    }\n    return { ...requiredField, [typedKey]: {} };\n  }\n\n  if (properties._def.typeName === ZodFirstPartyTypeKind.ZodEffects) {\n    return generateMongoosePropertyFromZodRec(\n      properties._def.schema,\n      required,\n      defaultValue,\n      schemaOptions\n    );\n  }\n\n  if (properties._def.typeName === ZodFirstPartyTypeKind.ZodIntersection) {\n    const generated = defaultsDeep(\n      generateMongooseSchemaFromZodRec(\n        properties._def.left,\n        required,\n        undefined,\n        schemaOptions\n      ),\n      generateMongooseSchemaFromZodRec(\n        properties._def.right,\n        required,\n        undefined,\n        schemaOptions\n      )\n    );\n    return {\n      ...requiredField,\n      [typedKey]: generated,\n      ...(\"_id\" in generated ? {} : { _id: false }),\n    };\n  }\n\n  if (properties._def.typeName === ZodFirstPartyTypeKind.ZodAny) {\n    return { ...requiredField, [typedKey]: MongooseSchema.Types.Mixed };\n  }\n\n  throw new Error(`Type ${propertiesZodType} not supported`);\n};\n\nexport const generateMongooseSchemaFromZodRec = (\n  properties:\n    | ZodObject<any>\n    | ZodUnion<any>\n    | ZodDiscriminatedUnion<string, any>\n    | ZodIntersection<any, any>,\n  required = true,\n  removeIdsFromSchema = false,\n  schemaOptions: { typedKey: string } = { typedKey: \"type\" }\n): SchemaDefinition => {\n  const requiredField = required ? {} : { required };\n  const { typedKey } = schemaOptions;\n\n  if (isZodIntersection(properties)) {\n    return defaultsDeep(\n      generateMongooseSchemaFromZodRec(\n        properties._def.left,\n        required,\n        removeIdsFromSchema,\n        schemaOptions\n      ),\n      generateMongooseSchemaFromZodRec(\n        properties._def.right,\n        required,\n        removeIdsFromSchema,\n        schemaOptions\n      )\n    );\n  }\n\n  if (isZodUnion(properties)) {\n    const options = getZodUnionOptions(properties);\n    if (options === \"mixed\") throw new Error(UNION_WITH_NOT_OBJECT_AT_ROOT_ERROR);\n    return options.reduce<SchemaDefinition>((acc, curr) => {\n      return defaultsDeep(\n        acc,\n        generateMongooseSchemaFromZodRec(curr, false, removeIdsFromSchema, schemaOptions)\n      );\n    }, {});\n  }\n\n  if (isZodDiscriminatedUnion(properties)) {\n    const propertiesDef = properties._def as ZodDiscriminatedUnionDef<\n      string,\n      Array<ZodObject<any>>\n    >;\n    const { discriminator, options, optionsMap } = propertiesDef;\n    const enumValues = [...optionsMap.keys()] as Array<string>;\n    const preRes = options.reduce<SchemaDefinition>((acc, curr) => {\n      return defaultsDeep(\n        acc,\n        generateMongooseSchemaFromZodRec(curr, false, removeIdsFromSchema, schemaOptions)\n      );\n    }, {});\n    return {\n      ...preRes,\n      [discriminator]: { [typedKey]: String, enum: enumValues, ...requiredField },\n    };\n  }\n  const objectKeys = getZodObjectKeys(properties);\n\n  return objectKeys.reduce<SchemaDefinition>((acc, curr) => {\n    const prop = properties.shape[curr];\n    if (isZodObject(prop)) {\n      const _id = getZodObjectKeys(prop).includes(\"_id\");\n\n      return {\n        ...acc,\n        [curr]: {\n          ...requiredField,\n          [typedKey]: generateMongooseSchemaFromZodRec(\n            prop,\n            required,\n            removeIdsFromSchema,\n            schemaOptions\n          ),\n          ...(_id ? {} : { _id: false }),\n        },\n      };\n    }\n    if (isZodUnion(prop)) {\n      const options = getZodUnionOptions(prop);\n      if (options === \"mixed\")\n        return {\n          ...acc,\n          [curr]: { ...requiredField, [typedKey]: MongooseSchema.Types.Mixed },\n        };\n\n      const _id = getZodObjectKeys(prop).includes(\"_id\");\n      return defaultsDeep(acc, {\n        [curr]: {\n          ...requiredField,\n          [typedKey]: generateMongooseSchemaFromZodRec(\n            prop,\n            required,\n            removeIdsFromSchema,\n            schemaOptions\n          ),\n          ...(_id ? {} : { _id: false }),\n        },\n      });\n    }\n\n    if (isZodDiscriminatedUnion(prop)) {\n      const _id = getZodObjectKeys(prop).includes(\"_id\");\n      return defaultsDeep(acc, {\n        [curr]: {\n          ...requiredField,\n          [typedKey]: generateMongooseSchemaFromZodRec(\n            prop,\n            required,\n            removeIdsFromSchema,\n            schemaOptions\n          ),\n          ...(_id ? {} : { _id: false }),\n        },\n      });\n    }\n    if (removeIdsFromSchema && curr === \"_id\") return acc;\n\n    return {\n      ...acc,\n      [curr]: generateMongoosePropertyFromZodRec(\n        properties.shape[curr],\n        required,\n        undefined,\n        schemaOptions\n      ),\n    };\n  }, {});\n};\n"],"names":[],"mappings":"AAAA,sCAAsC;AACtC,yCAAyC;AACzC,yCAAyC;;;AACzC,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAClD,OAAO,EACL,MAAM,IAAI,cAAc,EAGxB,KAAK,GACN,MAAM,UAAU,CAAC;AAClB,OAAO,EAIL,qBAAqB,GAItB,MAAM,KAAK,CAAC;AACb,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,gBAAgB,EAAE,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,EACL,UAAU,EACV,uBAAuB,EACvB,iBAAiB,EACjB,WAAW,EACX,UAAU,GACX,MAAM,iBAAiB,CAAC;AAEzB,MAAM,CAAC,MAAM,mCAAmC,GAC9C,qDAAqD,CAAC;AAExD,MAAM,kCAAkC,GAAG,CACzC,UAAoC,EACpC,QAAQ,GAAG,IAAI,EACf,eAAmC,SAAS,EAC5C,gBAAsC,EAAE,QAAQ,EAAE,MAAM,EAAE,EAChC,EAAE;IAC5B,MAAM,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC;IACtC,MAAM,iBAAiB,GAAG,aAAa,CAAC,QAAQ,CAAC;IACjD,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC;IAC1D,MAAM,EAAE,QAAQ,EAAE,GAAG,aAAa,CAAC;IAEnC,IACE,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,WAAW;QAC9D,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,WAAW,EAC9D,CAAC;QACD,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;QACtC,OAAO,kCAAkC,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;IACxF,CAAC;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,UAAU,EAAE,CAAC;QAClE,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC;QACtC,OAAO,kCAAkC,CACvC,SAAS,EACT,QAAQ,EACR,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,EAC9B,aAAa,CACd,CAAC;IACJ,CAAC;IAED,IAAI,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC;QAC5B,MAAM,GAAG,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACzD,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,gCAAgC,CAC1C,UAAU,EACV,SAAS,EACT,SAAS,EACT,aAAa,CACd;YACD,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YAC9C,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SAC/B,CAAC;IACJ,CAAC;IAED,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;QAC3B,IACE,WAAW,CAAC,UAAU,CAAC,OAAO,CAAC;YAC/B,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC;YAC9B,uBAAuB,CAAC,UAAU,CAAC,OAAO,CAAC,EAC3C,CAAC;YACD,MAAM,SAAS,GAAG,gCAAgC,CAChD,UAAU,CAAC,OAAO,EAClB,SAAS,EACT,SAAS,EACT,aAAa,CACd,CAAC;YACF,MAAM,KAAK,GAAG,KAAK,IAAI,SAAS,CAAC;YAEjC,IAAI,KAAK;gBAAE,OAAO,SAAS,CAAC,GAAG,CAAC;YAEhC,OAAO;gBACL,GAAG,aAAa;gBAChB,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;gBACvB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;gBAC9C,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;aACjC,CAAC;QACJ,CAAC;QAED,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE;gBACV,kCAAkC,CAChC,UAAU,CAAC,OAAO,EAClB,SAAS,EACT,SAAS,EACT,aAAa,CACd;aACF;YACD,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,SAAS,EAAE,CAAC;QACjE,IAAI,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,OAAO;gBACL,GAAG,aAAa;gBAChB,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,QAAQ;gBAC1B,GAAG,EAAE,UAAU,CAAC,IAAI,CAAC,WAAW;aACjC,CAAC;QACJ,CAAC;QACD,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAC1C,CAAC,KAAK,EAA2C,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CACzE,CAAC;QACF,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAC1C,CAAC,KAAK,EAA2C,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,KAAK,CACzE,CAAC;QAEF,MAAM,GAAG,GAAG,QAAQ,EAAE,KAAK,CAAC;QAC5B,MAAM,GAAG,GAAG,QAAQ,EAAE,KAAK,CAAC;QAE5B,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,MAAM;YAClB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YAC9C,GAAG,CAAC,GAAG,KAAK,SAAS,IAAI,EAAE,GAAG,EAAE,CAAC;YACjC,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;SACpB,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,aAAa,EAAE,CAAC;QAC9D,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAC3D,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,IAAI;YAChB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YAC9C,IAAI,EAAE,QAAQ;SACf,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACxD,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,IAAI;YAChB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,UAAU,EAAE,CAAC;QAC3D,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,OAAO;YACnB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,SAAS,EAAE,CAAC;QAC1D,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CACxC,CAAC,KAAK,EAA+D,EAAE,CACrE,KAAK,CAAC,IAAI,KAAK,KAAK,CACvB,CAAC;QACF,MAAM,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,CACxC,CAAC,KAAK,EAA+D,EAAE,CACrE,KAAK,CAAC,IAAI,KAAK,KAAK,CACvB,CAAC;QACF,MAAM,GAAG,GAAG,QAAQ;YAClB,CAAC,CAAC,QAAQ,CAAC,SAAS;gBAClB,CAAC,CAAC,QAAQ,CAAC,KAAK;gBAChB,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC;YACtB,CAAC,CAAC,SAAS,CAAC;QACd,MAAM,GAAG,GAAG,QAAQ;YAClB,CAAC,CAAC,QAAQ,CAAC,SAAS;gBAClB,CAAC,CAAC,QAAQ,CAAC,KAAK;gBAChB,CAAC,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC;YACtB,CAAC,CAAC,SAAS,CAAC;QAEd,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,MAAM;YAClB,GAAG,CAAC,YAAY,KAAK,SAAS,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YAC5D,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC;YACnB,GAAG,CAAC,GAAG,KAAK,SAAS,IAAI,EAAE,GAAG,EAAE,CAAC;SAClC,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;QACxD,MAAM,EAAE,MAAM,EAAE,GAAG,aAAa,CAAC;QACjC,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,MAAM;YAClB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;YAC9C,IAAI,EAAE,MAAM;SACb,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,UAAU,EAAE,CAAC;QAC3D,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,MAAM;YAClB,GAAG,CAAC,YAAY,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;SAC/C,CAAC;IACJ,CAAC;IAED,IAAI,iBAAiB,KAAK,qBAAqB,CAAC,SAAS,EAAE,CAAC;QAC1D,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3C,IAAI,OAAO,CAAC,QAAQ,KAAK,qBAAqB,CAAC,aAAa,EAAE,CAAC;YAC7D,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,IAAI,KAAK,MAAM,EAAE,CAAC;gBACpB,OAAO;oBACL,GAAG,aAAa;oBAChB,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,MAAM,CACzB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,GAAG,aAAa,EAAE,EAAE,CAAC,EAC7E,EAAE,CACH;iBACF,CAAC;YACJ,CAAC;QACH,CAAC;QACD,IAAI,OAAO,CAAC,QAAQ,KAAK,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACvD,MAAM,MAAM,GAAG,OAAO,CAAC,MAAuB,CAAC;YAC/C,OAAO;gBACL,GAAG,aAAa;gBAChB,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,MAAM,CACvB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,GAAG,aAAa,EAAE,EAAE,CAAC,EAC7E,EAAE,CACH;aACF,CAAC;QACJ,CAAC;QACD,OAAO,EAAE,GAAG,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC;IAC9C,CAAC;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,UAAU,EAAE,CAAC;QAClE,OAAO,kCAAkC,CACvC,UAAU,CAAC,IAAI,CAAC,MAAM,EACtB,QAAQ,EACR,YAAY,EACZ,aAAa,CACd,CAAC;IACJ,CAAC;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,eAAe,EAAE,CAAC;QACvE,MAAM,SAAS,GAAG,YAAY,CAC5B,gCAAgC,CAC9B,UAAU,CAAC,IAAI,CAAC,IAAI,EACpB,QAAQ,EACR,SAAS,EACT,aAAa,CACd,EACD,gCAAgC,CAC9B,UAAU,CAAC,IAAI,CAAC,KAAK,EACrB,QAAQ,EACR,SAAS,EACT,aAAa,CACd,CACF,CAAC;QACF,OAAO;YACL,GAAG,aAAa;YAChB,CAAC,QAAQ,CAAC,EAAE,SAAS;YACrB,GAAG,CAAC,KAAK,IAAI,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;SAC9C,CAAC;IACJ,CAAC;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,QAAQ,KAAK,qBAAqB,CAAC,MAAM,EAAE,CAAC;QAC9D,OAAO,EAAE,GAAG,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACtE,CAAC;IAED,MAAM,IAAI,KAAK,CAAC,QAAQ,iBAAiB,gBAAgB,CAAC,CAAC;AAC7D,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,gCAAgC,GAAG,CAC9C,UAI6B,EAC7B,QAAQ,GAAG,IAAI,EACf,mBAAmB,GAAG,KAAK,EAC3B,gBAAsC,EAAE,QAAQ,EAAE,MAAM,EAAE,EACxC,EAAE;IACpB,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,CAAC;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,aAAa,CAAC;IAEnC,IAAI,iBAAiB,CAAC,UAAU,CAAC,EAAE,CAAC;QAClC,OAAO,YAAY,CACjB,gCAAgC,CAC9B,UAAU,CAAC,IAAI,CAAC,IAAI,EACpB,QAAQ,EACR,mBAAmB,EACnB,aAAa,CACd,EACD,gCAAgC,CAC9B,UAAU,CAAC,IAAI,CAAC,KAAK,EACrB,QAAQ,EACR,mBAAmB,EACnB,aAAa,CACd,CACF,CAAC;IACJ,CAAC;IAED,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;QAC3B,MAAM,OAAO,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,OAAO,KAAK,OAAO;YAAE,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC;QAC9E,OAAO,OAAO,CAAC,MAAM,CAAmB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YACpD,OAAO,YAAY,CACjB,GAAG,EACH,gCAAgC,CAAC,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAClF,CAAC;QACJ,CAAC,EAAE,EAAE,CAAC,CAAC;IACT,CAAC;IAED,IAAI,uBAAuB,CAAC,UAAU,CAAC,EAAE,CAAC;QACxC,MAAM,aAAa,GAAG,UAAU,CAAC,IAGhC,CAAC;QACF,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,aAAa,CAAC;QAC7D,MAAM,UAAU,GAAG,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,CAAkB,CAAC;QAC3D,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAmB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;YAC5D,OAAO,YAAY,CACjB,GAAG,EACH,gCAAgC,CAAC,IAAI,EAAE,KAAK,EAAE,mBAAmB,EAAE,aAAa,CAAC,CAClF,CAAC;QACJ,CAAC,EAAE,EAAE,CAAC,CAAC;QACP,OAAO;YACL,GAAG,MAAM;YACT,CAAC,aAAa,CAAC,EAAE,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,aAAa,EAAE;SAC5E,CAAC;IACJ,CAAC;IACD,MAAM,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC,CAAC;IAEhD,OAAO,UAAU,CAAC,MAAM,CAAmB,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE;QACvD,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC;YACtB,MAAM,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEnD,OAAO;gBACL,GAAG,GAAG;gBACN,CAAC,IAAI,CAAC,EAAE;oBACN,GAAG,aAAa;oBAChB,CAAC,QAAQ,CAAC,EAAE,gCAAgC,CAC1C,IAAI,EACJ,QAAQ,EACR,mBAAmB,EACnB,aAAa,CACd;oBACD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;iBAC/B;aACF,CAAC;QACJ,CAAC;QACD,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;YACrB,MAAM,OAAO,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;YACzC,IAAI,OAAO,KAAK,OAAO;gBACrB,OAAO;oBACL,GAAG,GAAG;oBACN,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,aAAa,EAAE,CAAC,QAAQ,CAAC,EAAE,cAAc,CAAC,KAAK,CAAC,KAAK,EAAE;iBACrE,CAAC;YAEJ,MAAM,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnD,OAAO,YAAY,CAAC,GAAG,EAAE;gBACvB,CAAC,IAAI,CAAC,EAAE;oBACN,GAAG,aAAa;oBAChB,CAAC,QAAQ,CAAC,EAAE,gCAAgC,CAC1C,IAAI,EACJ,QAAQ,EACR,mBAAmB,EACnB,aAAa,CACd;oBACD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;iBAC/B;aACF,CAAC,CAAC;QACL,CAAC;QAED,IAAI,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC;YAClC,MAAM,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnD,OAAO,YAAY,CAAC,GAAG,EAAE;gBACvB,CAAC,IAAI,CAAC,EAAE;oBACN,GAAG,aAAa;oBAChB,CAAC,QAAQ,CAAC,EAAE,gCAAgC,CAC1C,IAAI,EACJ,QAAQ,EACR,mBAAmB,EACnB,aAAa,CACd;oBACD,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;iBAC/B;aACF,CAAC,CAAC;QACL,CAAC;QACD,IAAI,mBAAmB,IAAI,IAAI,KAAK,KAAK;YAAE,OAAO,GAAG,CAAC;QAEtD,OAAO;YACL,GAAG,GAAG;YACN,CAAC,IAAI,CAAC,EAAE,kCAAkC,CACxC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EACtB,QAAQ,EACR,SAAS,EACT,aAAa,CACd;SACF,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC,CAAC","debug_id":"62b63108-bf7c-5f6a-bf6e-a9eb224dec8b"}