{"version":3,"file":"type.js","sources":["libs/EmailClient/type.ts"],"sourceRoot":"/","sourcesContent":["import { Notification } from \"@/entities/Notification/notification.entity.js\";\nimport { Role } from \"@/utils/constants.js\";\nimport { CustomResponse } from \"@/utils/CustomResponse.js\";\nimport { Language } from \"@/utils/Language.js\";\n\nexport type EmailClient = {\n  sendContactUsMail: (params: {\n    name: string;\n    email: string;\n    message: string;\n  }) => Promise<CustomResponse<string, \"email_not_sent\">>;\n  sendEmailValidationMail: (params: {\n    email: string;\n    userId: string;\n    userName: string;\n    language: Language;\n    frontendUrl: string;\n  }) => Promise<CustomResponse<string, \"email_not_sent\">>;\n  sendForgottenPasswordMail: (params: {\n    email: string;\n    resetPasswordToken: string;\n    language: Language;\n    frontendUrl: string;\n  }) => Promise<CustomResponse<string, \"email_not_sent\">>;\n  sendNotificationMail: (params: {\n    notification: Notification;\n    to: { email: string; name: string; language: Language };\n    frontendUrl: string;\n    userRole: Role;\n  }) => Promise<CustomResponse<string, \"email_not_sent\">>;\n};\n\nexport enum EmailTemplate {\n  EMAIL_VALIDATION = \"email-validation\",\n  FORGOTTEN_PASSWORD = \"forgotten-password\",\n  NOTIFICATION = \"notification\",\n  NEW_TEST_REQUEST = \"new-test-request\",\n  TEST_REQUEST_ACCEPTED = \"test-request-accepted\",\n  MONEY_SENT = \"money-sent\",\n  PRODUCT_REVIEWED = \"product-reviewed\",\n}\n"],"names":[],"mappings":";;AAgCA,MAAM,CAAN,IAAY,aAQX;AARD,WAAY,aAAa;IACvB,sDAAqC,CAAA;IACrC,0DAAyC,CAAA;IACzC,8CAA6B,CAAA;IAC7B,sDAAqC,CAAA;IACrC,gEAA+C,CAAA;IAC/C,0CAAyB,CAAA;IACzB,sDAAqC,CAAA;AACvC,CAAC,EARW,aAAa,KAAb,aAAa,QAQxB","debug_id":"29f69e1e-fcbf-594f-ae3b-c9981bc09a32"}