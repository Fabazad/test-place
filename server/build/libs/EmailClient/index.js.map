{"version":3,"file":"index.js","sources":["libs/EmailClient/index.ts"],"sourceRoot":"/","sourcesContent":["import { configs } from \"@/configs.js\";\nimport { NotificationType, Role } from \"@/utils/constants.js\";\nimport { createSingletonGetter } from \"@/utils/singleton.js\";\nimport axios from \"axios\";\nimport { sendTransactionalEmail } from \"./sendTransactionalEmail.js\";\nimport { TEMPLATE_IDS } from \"./templateIds.js\";\nimport { EmailClient, EmailTemplate } from \"./type.js\";\n\nconst createEmailClient = (): EmailClient => {\n  const brevoAxios = axios.create({\n    baseURL: configs.BREVO_BASE_URL,\n    headers: {\n      \"api-key\": configs.BREVO_API_KEY,\n      accept: \"application/json\",\n      \"content-type\": \"application/json\",\n    },\n  });\n\n  const fromTestPlaceContact = {\n    name: configs.EMAIL_SENDER_NAME,\n    email: configs.EMAIL_SENDER_EMAIL,\n  };\n\n  const fromTestPlaceNoReply = {\n    name: configs.EMAIL_SENDER_NAME,\n    email: configs.NO_REPLY_EMAIL_SENDER_EMAIL,\n  };\n\n  return {\n    sendContactUsMail: async ({ email, name, message }) => {\n      const res = await sendTransactionalEmail({\n        brevoAxios,\n        from: { name, email },\n        to: {\n          name: configs.EMAIL_SENDER_NAME,\n          email: configs.EMAIL_SENDER_EMAIL,\n        },\n        templateId: configs.CONTACT_US_EMAIL_TEMPLATE_ID,\n        templateParams: { name, message },\n      });\n\n      return res;\n    },\n\n    sendEmailValidationMail: async ({\n      email,\n      userId,\n      language,\n      userName,\n      frontendUrl,\n    }) => {\n      const emailValidationLink = new URL(\n        `email-validation/${userId}`,\n        frontendUrl\n      ).toString();\n\n      const templateId = TEMPLATE_IDS[EmailTemplate.EMAIL_VALIDATION][language];\n\n      const res = await sendTransactionalEmail({\n        brevoAxios,\n        from: fromTestPlaceContact,\n        to: { name: userName, email },\n        templateId,\n        templateParams: { link: emailValidationLink, userName },\n      });\n\n      return res;\n    },\n\n    sendForgottenPasswordMail: async ({\n      email,\n      resetPasswordToken,\n      language,\n      frontendUrl,\n    }) => {\n      const resetPasswordLink = new URL(\n        `reset-password/${resetPasswordToken}`,\n        frontendUrl\n      ).toString();\n\n      const res = await sendTransactionalEmail({\n        brevoAxios,\n        from: fromTestPlaceContact,\n        to: { email },\n        templateId: TEMPLATE_IDS[EmailTemplate.FORGOTTEN_PASSWORD][language],\n        templateParams: { link: resetPasswordLink },\n      });\n\n      return res;\n    },\n\n    sendNotificationMail: async ({ notification, to, frontendUrl, userRole }) => {\n      const testLink = new URL(\n        `dashboard/${\n          userRole === Role.TESTER ? \"my-current-tests\" : \"customer-current-tests\"\n        }?testId=${notification.test._id}`,\n        frontendUrl\n      ).toString();\n\n      const templateMap: { [key in NotificationType]?: EmailTemplate } = {\n        [NotificationType.MONEY_SENT]: EmailTemplate.MONEY_SENT,\n        [NotificationType.NEW_REQUEST]: EmailTemplate.NEW_TEST_REQUEST,\n        [NotificationType.PRODUCT_REVIEWED]: EmailTemplate.PRODUCT_REVIEWED,\n        [NotificationType.REQUEST_ACCEPTED]: EmailTemplate.TEST_REQUEST_ACCEPTED,\n      };\n\n      const defaultTemplate = EmailTemplate.NOTIFICATION;\n\n      const templateId =\n        TEMPLATE_IDS[templateMap[notification.type] || defaultTemplate][to.language];\n\n      const res = await sendTransactionalEmail({\n        brevoAxios,\n        from: fromTestPlaceContact,\n        to,\n        templateId: templateId,\n        templateParams: {\n          testStatus: notification.test.status,\n          productTitle: notification.product.title,\n          testLink,\n          productImageUrl: notification.product.imageUrls[0],\n          userName: to.name,\n        },\n      });\n\n      return res;\n    },\n    sendLastPublishedProductsMail: async ({ frontendUrl, to, products }) => {\n      const productsObjects = products.map((product) => ({\n        title: product.title,\n        imageUrl: product.imageUrls[0],\n        link: new URL(`ad/${product._id}`, frontendUrl).toString(),\n      }));\n\n      const allRes = await Promise.all(\n        to.map(async ({ email, name, language }) => {\n          const templateId =\n            TEMPLATE_IDS[EmailTemplate.LAST_PUBLISHED_PRODUCTS][language];\n\n          const res = await sendTransactionalEmail({\n            brevoAxios,\n            from: fromTestPlaceNoReply,\n            to: { email, name },\n            templateId,\n            templateParams: { userName: name, products: productsObjects },\n          });\n\n          return res;\n        })\n      );\n\n      return { success: true, data: allRes.filter((r) => r.success).map((r) => r.data) };\n    },\n  };\n};\n\nexport const getEmailClient = createSingletonGetter(createEmailClient);\n"],"names":[],"mappings":"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","debug_id":"7e78c707-dabf-5cf3-91e5-08951204ab09"}