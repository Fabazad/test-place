{"version":3,"file":"type.js","sources":["libs/AuthManager/type.ts"],"sourceRoot":"/","sourcesContent":["import { Role } from \"@/utils/constants.js\";\nimport { CustomResponse } from \"@/utils/CustomResponse.js\";\nimport { DecodedUser } from \"@/utils/DecodedUser.type.js\";\nimport { Language } from \"@/utils/Language.js\";\n\nexport type AuthManager = {\n  decodeUser: (token: string) => DecodedUser | null;\n  checkRole: (role: Role, decodedUser?: DecodedUser) => boolean;\n  encodeUser: (params: { decodedUser: DecodedUser; staySignedIn: boolean }) => string;\n  hashPassword: (password: string) => string;\n  comparePasswords: (password: string, hashedPassword: string) => boolean;\n  generateRandomToken: () => string;\n  facebookLogin: (params: {\n    accessToken: string;\n  }) => Promise<\n    CustomResponse<\n      { facebookId: string; name: string; email: string },\n      \"unknown_error\" | \"facebook_account_missing_email\"\n    >\n  >;\n  googleLogin: (params: { credential: string }) => Promise<\n    CustomResponse<\n      {\n        googleId: string;\n        name?: string;\n        email?: string;\n        language?: Language;\n      },\n      \"unknown_error\" | \"invalid_token\"\n    >\n  >;\n};\n"],"names":[],"mappings":"","debug_id":"c85914a3-1dc7-5f7d-b3c4-d569420d0060"}