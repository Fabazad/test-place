{"version":3,"file":"product.dao.index.js","sources":["entities/Product/dao/product.dao.index.ts"],"sourceRoot":"/","sourcesContent":["import { generateMongooseSchemaFromZod } from \"@/utils/generateMongooseSchemaFromZod/index.js\";\nimport { createSingletonGetter } from \"@/utils/singleton.js\";\nimport mongoose, { FilterQuery } from \"mongoose\";\nimport { generateAmazonUrl, ProductSortBy } from \"../product.constants.js\";\nimport {\n  PopulatedProduct,\n  Product,\n  ProductData,\n  productDataSchema,\n} from \"../product.entity.js\";\nimport { ProductDAO } from \"./product.dao.type.js\";\n\nconst productMongooseSchema = new mongoose.Schema(\n  generateMongooseSchemaFromZod(productDataSchema),\n  { timestamps: true }\n);\n\nproductMongooseSchema.index({ title: \"text\" }).index({ asin: 1 }, { unique: true });\n\nconst productModel = mongoose.model<Product>(\"Product\", productMongooseSchema);\n\nconst createProductDAO = (): ProductDAO => {\n  const SORT_RECORD: Record<ProductSortBy, { [key: string]: any }> = {\n    [ProductSortBy.CREATED_AT]: { createdAt: -1 },\n    [ProductSortBy.PRICE]: { price: 1 },\n    [ProductSortBy.FINAL_PRICE]: { finalPrice: 1 },\n    [ProductSortBy.SCORE]: { score: { $meta: \"textScore\" } },\n  };\n  return {\n    getProductById: async ({ id }) => {\n      const product = await productModel.findById(id).lean();\n      if (!product) return null;\n      product.amazonUrl = generateAmazonUrl(product);\n      return JSON.parse(JSON.stringify(product));\n    },\n    decrementRemainingTestsCount: async ({ productId }) => {\n      await productModel.updateOne(\n        { _id: productId },\n        { $inc: { remainingTestsCount: -1 } }\n      );\n    },\n    getProductByAsin: async ({ asin }) => {\n      const product = await productModel.findOne({ asin }).lean();\n      if (!product) return null;\n      product.amazonUrl = generateAmazonUrl(product);\n      return JSON.parse(JSON.stringify(product));\n    },\n    findPageResults: async ({ searchData }) => {\n      const {\n        itemsPerPage,\n        page,\n        published,\n        sortBy,\n        keyWords,\n        automaticAcceptance,\n        category,\n        free,\n        maxPrice,\n        minPrice,\n        prime,\n        seller,\n        remainingRequests,\n      } = searchData;\n      const query: FilterQuery<ProductData> = {\n        ...(published && { publishExpirationDate: { $gte: new Date() } }),\n        ...(keyWords && { $text: { $search: keyWords.toLowerCase() } }),\n        ...(automaticAcceptance && { automaticAcceptance }),\n        ...(category && { category }),\n        ...(free && { finalPrice: 0 }),\n        ...(minPrice === undefined &&\n          maxPrice !== undefined && { price: { $lte: maxPrice } }),\n        ...(minPrice !== undefined &&\n          maxPrice === undefined && { price: { $gte: minPrice } }),\n        ...(maxPrice !== undefined &&\n          minPrice !== undefined && { price: { $gte: minPrice, $lte: maxPrice } }),\n        ...(prime && { isPrime: true }),\n        ...(seller && { seller }),\n        ...(remainingRequests && { remainingTestsCount: { $gt: 0 } }),\n      };\n\n      const [hits, totalCount] = await Promise.all([\n        productModel\n          .find(query)\n          .sort(\n            !keyWords && sortBy === ProductSortBy.SCORE\n              ? { createdAt: -1 }\n              : SORT_RECORD[sortBy]\n          )\n          .limit(itemsPerPage)\n          .skip(itemsPerPage * (page - 1))\n          .populate(\"seller\")\n          .lean<Array<PopulatedProduct>>(),\n        productModel.countDocuments(query),\n      ]);\n\n      return {\n        hits: hits.map((h) => {\n          h._id = h._id.toString();\n          h.seller._id = h.seller._id.toString();\n          //@ts-ignore\n          delete h.seller.password;\n          //@ts-ignore\n          h.amazonUrl = generateAmazonUrl(h);\n          return h;\n        }),\n        totalCount,\n      };\n    },\n    getPopulatedProductById: async ({ id }) => {\n      const product = await productModel.findById(id).populate(\"seller\").lean();\n      if (!product) return null;\n      const res = JSON.parse(JSON.stringify(product));\n      delete res.seller.password;\n      res.amazonUrl = generateAmazonUrl(res);\n      return res;\n    },\n    updateProduct: async ({ id, updates }) => {\n      const product = await productModel.findByIdAndUpdate(id, updates, { new: true });\n      if (!product) return null;\n      const res = JSON.parse(JSON.stringify(product));\n      delete res.seller.password;\n      res.amazonUrl = generateAmazonUrl(res);\n      return res;\n    },\n    create: async ({ productData }) => {\n      try {\n        const product = await productModel.create(productData);\n        const res = JSON.parse(JSON.stringify(product.toJSON()));\n        delete res.seller.password;\n        res.amazonUrl = generateAmazonUrl(res);\n        return { success: true, data: res };\n      } catch (err: any) {\n        if (err.code === 11000) {\n          return { success: false, errorCode: \"duplicate_asin\" };\n        }\n        throw err;\n      }\n    },\n    findAndDeleteProduct: async ({ id }) => {\n      const product = await productModel.findByIdAndDelete(id).lean();\n      if (!product) return null;\n      const res = JSON.parse(JSON.stringify(product));\n      delete res.seller.password;\n      res.amazonUrl = generateAmazonUrl(res);\n      return res;\n    },\n    findLastPublishedProducts: async ({ fromDate, limit }) => {\n      const [hits, totalCount] = await Promise.all([\n        productModel\n          .find({ publishDate: { $gte: fromDate } })\n          .limit(limit)\n          .sort({ publishDate: 1 })\n          .lean<Array<Product>>(),\n        productModel.countDocuments({ publishDate: { $gte: fromDate } }),\n      ]);\n\n      hits.forEach((p) => {\n        p.amazonUrl = generateAmazonUrl(p);\n      });\n\n      return { hits, totalCount };\n    },\n  };\n};\n\nexport const getProductDAO = createSingletonGetter(createProductDAO);\n"],"names":[],"mappings":"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","debug_id":"793e2f82-3e08-5b16-9ae0-3bb763e60d4f"}