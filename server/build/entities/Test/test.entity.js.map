{"version":3,"file":"test.entity.js","sources":["entities/Test/test.entity.ts"],"sourceRoot":"/","sourcesContent":["import { InferEnum } from \"@/utils/inferEnum.js\";\nimport { savedDataSchema } from \"@/utils/savedDataSchema.js\";\nimport z from \"zod\";\nimport { productSchema } from \"../Product/product.entity.js\";\nimport { UserWithoutPassword } from \"../User/user.entity.js\";\nimport { TestStatus } from \"./test.constants.js\";\n\nexport const MessageSenderType = {\n  SELLER: \"seller\",\n  TESTER: \"tester\",\n  ADMIN: \"admin\",\n} as const;\nexport type MessageSenderType = InferEnum<typeof MessageSenderType>;\n\nexport const testMessageSchema = z.object({\n  message: z.string(),\n  date: z.date(),\n  sender: z.object({\n    senderType: z.nativeEnum(MessageSenderType),\n    userId: z.string(),\n  }),\n});\nexport type TestMessage = z.infer<typeof testMessageSchema>;\n\nexport const testDataSchema = z.object({\n  product: productSchema,\n  seller: z.string({ description: \"User\" }),\n  tester: z.string({ description: \"User\" }),\n  status: z.nativeEnum(TestStatus),\n  updates: z.array(\n    z.object({\n      date: z.date(),\n      status: z.nativeEnum(TestStatus),\n    })\n  ),\n  testerMessage: z.string().optional(),\n  cancelRequestReason: z.string().optional(),\n  declineRequestReason: z.string().optional(),\n  sellerMessage: z.string().optional(),\n  orderId: z.string().optional(),\n  declineReviewReason: z.string().optional(),\n  expirationDate: z.date().nullish(),\n  orderScreenshotUrl: z.string().optional(),\n  reviewId: z.string().optional(),\n  cancelReason: z.string().optional(),\n  adminMessage: z.string().optional(),\n  cancellationGuilty: z.string({ description: \"User\" }).optional(),\n  reviewScreenshotUrl: z.string().optional(),\n  messages: z.array(testMessageSchema).optional(),\n});\nexport type TestData = z.infer<typeof testDataSchema>;\n\nexport const testSchema = testDataSchema.extend(savedDataSchema);\nexport type Test = z.infer<typeof testSchema>;\n\nexport type PopulatedTest = Omit<Test, \"seller\" | \"tester\"> & {\n  seller: UserWithoutPassword;\n  tester: UserWithoutPassword;\n};\n"],"names":[],"mappings":";;AACA,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAC7D,OAAO,CAAC,MAAM,KAAK,CAAC;AACpB,OAAO,EAAE,aAAa,EAAE,MAAM,8BAA8B,CAAC;AAE7D,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AAEjD,MAAM,CAAC,MAAM,iBAAiB,GAAG;IAC/B,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;CACN,CAAC;AAGX,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,CAAC,MAAM,CAAC;IACxC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE;IACnB,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;IACd,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;QACf,UAAU,EAAE,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC;QAC3C,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE;KACnB,CAAC;CACH,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM,CAAC;IACrC,OAAO,EAAE,aAAa;IACtB,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;IACzC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC;IACzC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;IAChC,OAAO,EAAE,CAAC,CAAC,KAAK,CACd,CAAC,CAAC,MAAM,CAAC;QACP,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;QACd,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC;KACjC,CAAC,CACH;IACD,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACpC,mBAAmB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC1C,oBAAoB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC3C,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACpC,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,mBAAmB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC1C,cAAc,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE;IAClC,kBAAkB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACzC,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC/B,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,YAAY,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IACnC,kBAAkB,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAChE,mBAAmB,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC1C,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,QAAQ,EAAE;CAChD,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,UAAU,GAAG,cAAc,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC","debug_id":"0001fe50-5bb3-51dc-8620-e2edded2ecc7"}